<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--
        Beans注入的顺序要按链式写
    -->

    <!-- 加载type.properties -->
    <!-- 自动读取配置文件 -->
    <!--<context:property-placeholder location="classpath:type.properties"/>-->

    <!-- 数据库配置 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/CatCafe"/>
        <property name="username" value="root"/>
        <property name="password" value="951357"/>

        <!-- Connection Pooling Info -->
        <property name="maxActive" value="20"/>
        <property name="maxIdle" value="5"/>
        <property name="maxWait" value="5000"/>
        <property name="validationQuery" value="select 1"/>
    </bean>
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <!--
                分析：可能是在spring配置文件中，并不识别“hbm2ddl.auto”项， 所以该项配置根本没起到作用，
                而使用“hibernate.hbm2ddl.auto”，spring的配置文件是可以识别的，问题得到解决。期待有更权威的解释。
                <prop key="hbm2ddl.auto">create</prop>
                -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
        <!--
                直接用映射文件要用mappingLocations,映射文件地址用mappingDirectoryLocations
        -->
        <!--
                <property name="mappingDirectoryLocations" value="classpath:{dictionary}"/>
        -->
        <property name="mappingLocations" value="classpath:entity.hbm.xml"/>
        <property name="packagesToScan" value="com.dainy.naughty.model"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!-- 注入SessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--注解事务,在service方法写@transactional-->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 配置事务增强 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 配置需要进行事务管理的方法，和事务传播行为 -->
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 自动扫描:扫描自定义的Dao,Service -->
    <context:component-scan base-package="com.dainy.naughty.dao"/>
    <context:component-scan base-package="com.dainy.naughty.service"/>


    <!-- 配置自动aop -->
    <aop:aspectj-autoproxy />

    <!-- 配置切面 -->
    <aop:config>
        <!-- 配置切入点 com.dainy.naughty.*.com.dainy.naughty.service.*+.*(..)
            * org.ssh.com.dainy.naughty.service.*+.*(..)
                *：表示方法的作用域，*表示所有
                org.ssh.com.dainy.naughty.service.*：表示org.ssh.service下的任何包
                org.ssh.com.dainy.naughty.service.*+：表示org.ssh.service下的任何包及其子包
                *(..)：*表示任何方法，(..)表示方法的任何参数
         -->
        <aop:pointcut id="pointcut" expression="execution(* com.dainy.naughty.service.*+.*(..))"/>
        <!-- 适配切入点和事务增强 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>

</beans>